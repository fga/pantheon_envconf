<?php
/**
 * UCB dev/test/live config
 */

/**
 * Implements hook_help().
 * @param path - the site path on which we're displaying help
 * @param arg - an array that holds the current path
 */
function ucb_envconf_help($path, $arg) {
	$output = '';
	switch($path) {
		case "admin/help#ucb_envconf":
			$output .= '<p>' . t("The UCB Environment Configurations (ucb_envconf) module
				helps to automate the configuration of UC Berkeley Drupal distribution settings
				related to the current deployment environment of your site (development, testing,
				production, etc.). Please note that this module is only intended to facilitate
				development cycles and does not guarantee your site is configured correctly.").'</p>';
			$output .= '<p>' . t("For more information,
				see the <a href='http://drupal-apps.berkeley.edu/node/4'>UCB Environment
				Configurations online documentation</a>.") . '</p>';
			$output .= '<h3>' . t('Supported Environments') . '</h3>';
			$output .= '<p>' . t("The UCB Environment Configurations module currently supports
				your local development environment (if your local site's domain is <i>.local</i> or <i>
				.localhost</i>) and the development/testing/live environments of
				<a href='http://content.berkeley.edu/hosting/drupal/pantheon'>Pantheon's
				hosting platform</a>.") . '</p>';
			$output .= '<h3>' . t('Configuration Changes') . '</h3>';
			$output .= '<p>' . t("UCB Environment Configurations makes the following changes:
				<dl>
					<dt><a href='/admin/user/cas/settings'>CAS Authentication Server Hostname</a></dt>
					<dd>UC Berkeley's production CAS authentication server is only available to live
					sites. A test CAS authentication server is configured for all other site
					environments.</dd>
					<dt><a href='/admin/user/cas/attributes'>LDAP Server</a></dt>
					<dd>Live environments are configured to use UC Berkeley's production LDAP
					server. All other environments use a test LDAP server.</dd>
				</dl>") . '</p>';
			break;
	}
	return $output;
}

/**
 * Implements hook_boot().
 */
function ucb_envconf_boot() {
	$env = '';
	$site_env = '';
	//if (isset($GLOBALS['_SERVER']['PANTHEON_ENVIRONMENT'])) $env = $GLOBALS['_SERVER']['PANTHEON_ENVIRONMENT'];
	if (isset($_SERVER['PANTHEON_ENVIRONMENT'])) $env = $_SERVER['PANTHEON_ENVIRONMENT'];

	/*
	 * Check the Pantheon environment variable first, if it has a value the operators will
	 * short circuit and the preg_match()s will never be evaluated. This is good since pregs
	 * are slow.
	 *
	 * The pregs are left in here so we can adapt this to non-Pantheon servers in the future.
	 * Also so it will work with 'localhost' or 'local' urls.
	 */

	if ($env == 'live') {
		$site_env = 'live';
	}
	elseif ($env == 'test') {
		$site_env = 'test';
	}
	elseif (($env == 'dev') ||
	(preg_match('/[\w\.\-_]*\.localhost:{0,1}(?=\d{0,})/', $_SERVER['HTTP_HOST']) === 1) ||
	(preg_match('/[\w\.\-_]*\.local:{0,1}(?=\d{0,})/', $_SERVER['HTTP_HOST']) === 1)) {
		//Matched a dev domain
		$site_env = 'dev';
	}

	/*
	 * it would be nice to only inject configuration when the corresponding module is present
	 * but to minimize processing in hook_boot() we will simply inject the configuration blindly
	 * as we would if we were overriding these values in settings.php

	 $list = module_list(TRUE);
	 // Perform module-specific variable alterations
	 if (isset($list['cas'])) ucb_envconf_cas($site_env);
	 if (isset($list['cas_attributes'])) ucb_envconf_cas_attributes($site_env);

	 */
	ucb_envconf_cas($site_env);
	ucb_envconf_cas_attributes($site_env);
}


/**
 * cas settings
 */
function ucb_envconf_cas($env) {
	global $conf;
	switch($env) {
		case "dev":
		case "test":
			$conf['cas_server'] = 'auth-test.berkeley.edu';
			break;
		case "live":
			$conf['cas_server'] = 'auth.berkeley.edu';
			break;
	}
}

/**
 * cas_attributes settings
 * 
 * To avoid hitting the database we need to know that 
 * ldap-test.berkeley.edu has an sid of 1
 * ldap.berkeley.edu has na sid of 2
 * This is enforced by ucb_cas-6.x and that is why there is a ucb_envconf.info  
 * dependency on ucb_cas. These sids are enforced in ucb_cas_install().
 */
function ucb_envconf_cas_attributes($env) {
	global $conf;
	switch($env) {
		case "dev":
		case "test":
			$conf['cas_attributes']['ldap']['server'] = 1;
			break;
		case "live":
			$conf['cas_attributes']['ldap']['server'] = 2;
			break;
	}

}

/**
 * Implements hook_form_alter().
 *
 * Let users know that certain admin form values are "locked" by this module
 */
function ucb_envconf_form_alter(&$form, &$form_state, $form_id) {
	switch ($form_id) {
		case "cas_admin_settings":
			$form['server']['cas_server']['#disabled'] = TRUE;
			$form['server']['cas_server']['#description'] = t('<em><strong>Setting locked by ucb_envconf.module</strong></em><br />') . $form['server']['cas_server']['#description'];
			break;
		case "cas_attributes_admin_settings":
			$form['cas_attributes']['ldap']['server']['#description'] = t('<em><strong>Setting locked by ucb_envconf.module</strong></em><br />') . $form['cas_attributes']['ldap']['server']['#description'];
			$form['cas_attributes']['ldap']['server']['#disabled'] = 'disabled';
			break;
		case "ldap_servers_admin_form":
			$form['server']['sid']['#disabled'] = TRUE;
			$form['server']['sid']['#description'] = t('<em><strong>Setting locked by ucb_envconf.module</strong></em><br />') . $form['server']['sid']['#description'];
			break;
	}
}

